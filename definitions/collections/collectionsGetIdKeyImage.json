{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Allan"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "tags" : [ {
    "name" : "PhotoShelter API"
  } ],
  "paths" : {
    "/collections/{collection_id}/key-image" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "GET /collections/{collection_id}/key-image.",
        "description" : "Get a collection's key image. This endpoint is fully public. Visibility and access permissions do not apply here. Any user should be able to retrieve the key image of any collection.",
        "operationId" : "collectionsGetIdKeyImage",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection ID to get the key image of",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CollectionId"
          },
          "example" : "C0000EXAMPLECOLL"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a collection/gallery key image.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ThisShouldBeARealId",
                    "status" : "400",
                    "title" : "Bad Request / Syntax",
                    "detail" : "Bad Request"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404 Not Found Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ResourceNotFoundException",
                    "status" : "404",
                    "title" : "Resource not found",
                    "detail" : "The requested resource was not found."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "429" : {
            "description" : "429 Too Many Requests Error",
            "headers" : {
              "Retry-After" : {
                "description" : "The Retry-After response HTTP header, expressed in seconds, indicates how long the user agent should wait before making a follow-up request.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                },
                "example" : 180
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "TooManyRequestsException",
                    "status" : "429",
                    "title" : "Too Many Requests",
                    "detail" : "The user has sent too many requests in a given amount of time see \"rate limiting\"."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CollectionId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^C0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "The Collection ID",
        "example" : "C0000EXAMPLECOLL"
      },
      "KeyImage" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^G[I|0]000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Collection/Group ID",
            "example" : "G0000EXAMPLE_GI0"
          },
          "type" : {
            "pattern" : "keyImage",
            "type" : "string",
            "example" : "keyImage"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/KeyImage_attributes"
          }
        }
      },
      "ImageId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^I0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "The Image ID",
        "example" : "I0000EXAMPLE_IMG"
      },
      "GalleryId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^G0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "The Gallery ID",
        "example" : "G0000EXAMPLEGALL"
      },
      "MetaTag" : {
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "string",
            "example" : "PhotoShelter 2019"
          },
          "version" : {
            "type" : "string",
            "example" : "2019-05-01"
          },
          "rate_limit" : {
            "$ref" : "#/components/schemas/MetaTag_rate_limit"
          }
        }
      },
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "inline_response_200" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/KeyImage"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaTag"
          }
        }
      },
      "KeyImage_attributes" : {
        "required" : [ "custom", "image_id", "image_url", "public" ],
        "type" : "object",
        "properties" : {
          "image_id" : {
            "$ref" : "#/components/schemas/ImageId"
          },
          "gallery_id" : {
            "$ref" : "#/components/schemas/GalleryId"
          },
          "collection_id" : {
            "$ref" : "#/components/schemas/CollectionId"
          },
          "custom" : {
            "type" : "boolean",
            "description" : "Custom assigned gallery key image",
            "example" : true
          },
          "image_url" : {
            "type" : "string",
            "description" : "Key image URL",
            "nullable" : true,
            "example" : "http://www.photoshelter.co/img-get/I0000EXAMPLE_IMG"
          },
          "public" : {
            "type" : "boolean",
            "description" : "Key Image is Public",
            "example" : true
          }
        }
      },
      "MetaTag_rate_limit" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 10
          },
          "current" : {
            "type" : "integer",
            "example" : 1
          },
          "expires" : {
            "type" : "integer",
            "example" : 40
          }
        }
      },
      "Error_links" : {
        "type" : "object",
        "properties" : {
          "about" : {
            "type" : "string",
            "example" : "http://api.developer.com/404.html"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "links" : {
            "$ref" : "#/components/schemas/Error_links"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}