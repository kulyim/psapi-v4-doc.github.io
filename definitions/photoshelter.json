{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Anthony"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "tags" : [ {
    "name" : "PhotoShelter"
  } ],
  "paths" : {
    "/galleries" : {
      "get" : {
        "tags" : [ "Gallery" ],
        "summary" : "Gets all the galleries for the account.",
        "description" : "Gets all the galleries for the account!",
        "operationId" : "GalleriesGet",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "description" : "Number of rows returned per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Sort by gallery property",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "creation_time",
            "enum" : [ "creation_time", "modification_time", "name", "display_order" ]
          }
        }, {
          "name" : "sort_dir",
          "in" : "query",
          "description" : "Sorting direction",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Full or partial gallery name  fdsfs fdfsdf ds   fdsfds\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolio",
          "in" : "query",
          "description" : "Filter the result set to return galleries listed on public site \n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "recently_updated",
          "in" : "query",
          "description" : "Filter the result set to return galleries recently updated \n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "/galleries/{gallery_id} - HTTP 200 OK Response.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MainResponse"
                },
                "example" : {
                  "data" : {
                    "type" : "gallery",
                    "id" : "G0000ySlj8A3bb9g",
                    "attributes" : {
                      "name" : "Example Name",
                      "description" : "Example Description",
                      "display_order" : 10,
                      "key_image_id" : "I0000ZJCk9LW4Zfc",
                      "access_id" : "A0000CxML4E07hTM",
                      "is_listed" : "t",
                      "is_orig_enabled" : false,
                      "is_watermark_disabled" : false,
                      "created_at" : "2019-04-09T18:34:40-04:00",
                      "modified_at" : "2019-09-06T16:24:24-04:00"
                    },
                    "links" : {
                      "self" : "example.photoshelter.com/galleries/G0000ySlj8A3bb9g"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MainResponse"
                }
              }
            },
            "links" : {
              "GetGallery" : {
                "operationId" : "galleryGetId",
                "parameters" : {
                  "gallery_id" : "$response.body#/data/id"
                },
                "description" : "Links to self"
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "AcsPermissionException",
                    "status" : "401",
                    "title" : "Invalid access to resource: Gallery",
                    "detail" : "You are not authorized to view this resource."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or is invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers. If you do not have an API key, you can request one on our website."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "404 Not Found Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ResourceNotFoundException",
                    "status" : "404",
                    "title" : "Resource not found",
                    "detail" : "The requested resource was not found."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiProblem" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "type" : {
            "type" : "string",
            "description" : "A URI reference (RFC3986) that identifies the problem type"
          },
          "status" : {
            "type" : "integer",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI reference that identifies the specific occurrence of the problem."
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 'API Problem'"
      },
      "v1JsonApi" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "example" : { },
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Gallery_2"
            }, {
              "$ref" : "#/components/schemas/Image"
            } ]
          },
          "meta" : {
            "type" : "object"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiProblem"
            }
          }
        },
        "description" : "A flat schema for the JSONAPI-light"
      },
      "MainResponse" : {
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "gallery" : "#/components/schemas/Gallery"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Gallery"
        } ]
      },
      "Gallery" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^G0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Gallery ID",
            "example" : "G0000ZJCk9LW4Zfc"
          },
          "type" : {
            "pattern" : "gallery",
            "type" : "string",
            "example" : "gallery"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Gallery_attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Gallery_links"
          }
        }
      },
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "Gallery_2" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The gallery ID",
            "example" : "G0000b9PbmJDQcko"
          },
          "type" : {
            "type" : "string",
            "description" : "Entity type",
            "example" : "gallery"
          },
          "description" : {
            "type" : "string",
            "description" : "Gallery description",
            "example" : "My trip to DR"
          },
          "f_list" : {
            "type" : "boolean",
            "description" : "Listed on public site",
            "example" : false
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Custom display order",
            "example" : 0
          },
          "mode" : {
            "type" : "string",
            "description" : "Native visibility mode"
          },
          "effective_mode" : {
            "type" : "string",
            "description" : "Effective mode with permission inheritance"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation date",
            "example" : "2019-04-12"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Modification date",
            "example" : "2019-04-12"
          },
          "collection_id" : {
            "type" : "string",
            "description" : "Collection ID",
            "example" : "C0000IRVZsqAiXtA"
          }
        }
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "gallery_id" : {
            "$ref" : "#/components/schemas/id"
          }
        }
      },
      "id" : {
        "type" : "string",
        "description" : "The gallery ID",
        "example" : "G0000b9PbmJDQcko"
      },
      "Gallery_attributes" : {
        "required" : [ "access_id", "created_at", "description", "display_order", "is_listed", "is_orig_enabled", "is_watermark_disabled", "key_image_id", "modified_at", "name", "name_url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Name of Gallery or Collection object (Whichever it is)",
            "example" : "My trip to DR"
          },
          "name_url" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "URL to the gallery"
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Description of the Gallery",
            "example" : "Trip to DR with my brothers and sisters"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Custom display order",
            "example" : 1
          },
          "key_image_id" : {
            "pattern" : "^I0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "ID of the Image that is the key image",
            "example" : "I0000ZJCk9LW4Zfc"
          },
          "access_id" : {
            "pattern" : "^A0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Access ID of the Gallery",
            "example" : "A0000Aij231cM_1R"
          },
          "is_listed" : {
            "type" : "string",
            "description" : "Flag that denotes if it is listed on the public site",
            "example" : "f",
            "enum" : [ "f", "t" ]
          },
          "is_orig_enabled" : {
            "type" : "boolean",
            "description" : "Original enabled boolean value",
            "example" : true
          },
          "is_watermark_disabled" : {
            "type" : "boolean",
            "description" : "Watermark disabled boolean value",
            "example" : true
          },
          "created_at" : {
            "type" : "date",
            "description" : "Creation date",
            "example" : "2019-04-25 14:54:12.136828"
          },
          "modified_at" : {
            "type" : "date",
            "description" : "Last modified date",
            "example" : "2019-04-25 14:54:12.136828"
          }
        }
      },
      "Gallery_links" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "Link to itself",
            "example" : "https://api.photoshelter.com/psapi/v4/galleries/G0000ZJCk9LW4Zfc"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}