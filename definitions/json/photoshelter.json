{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Yemi"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "tags" : [ {
    "name" : "Authenticate"
  } ],
  "paths" : {
    "/authenticate" : {
      "get" : {
        "summary" : "Use your PhotoShelter credentials to log in to your account.",
        "description" : "Verify user is a member.",
        "operationId" : "authenticate-get",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "The API Key. Can be requested if you do not have one.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email Address",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "email"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "token or cookie",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Use your PhotoShelter credentials to log in to your account.",
        "description" : "Verify user is a member.",
        "operationId" : "authenticate",
        "parameters" : [ {
          "name" : "X-PS-Api-Key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "/galleries/{gallery_id} - HTTP 200 OK Response.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                },
                "example" : {
                  "data" : {
                    "type" : "gallery",
                    "id" : "G0000EXAMPLE_GAL",
                    "attributes" : {
                      "name" : "Example Name",
                      "description" : "Example Description",
                      "display_order" : 10,
                      "key_image_id" : "GI000EXAMPLE_IMG",
                      "access_id" : "A0000EXAMPLE_ACS",
                      "is_listed" : false,
                      "is_orig_enabled" : false,
                      "is_watermark_disabled" : false,
                      "created_at" : "2019-04-09T18:34:40-04:00",
                      "modified_at" : "2019-09-06T16:24:24-04:00"
                    },
                    "links" : {
                      "self" : "example.photoshelter.com/galleries/G0000EXAMPLE_GAL"
                    }
                  },
                  "meta" : {
                    "copyright" : "PhotoShelter 2019",
                    "version" : "2019-05-01",
                    "rate_limit_limit" : 10,
                    "rate_limit_current" : 1,
                    "rate_limit_expires" : 40
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            },
            "links" : {
              "GetGallery" : {
                "operationId" : "galleryGetId",
                "parameters" : {
                  "gallery_id" : "$response.body#/data/id"
                },
                "description" : "Links to self"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ThisShouldBeARealId",
                    "status" : "400",
                    "title" : "Bad Request / Syntax",
                    "detail" : "Bad Request"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                },
                "example" : "WWW-Authenticate: Bearer"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "AcsPermissionException",
                    "status" : "401",
                    "title" : "Invalid access to resource: Gallery",
                    "detail" : "You are not authorized to view this resource."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "404 Not Found Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ResourceNotFoundException",
                    "status" : "404",
                    "title" : "Resource not found",
                    "detail" : "The requested resource was not found."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "429" : {
            "description" : "429 Too Many Requests Error",
            "headers" : {
              "Retry-After" : {
                "description" : "The Retry-After response HTTP header, expressed in seconds, indicates how long the user agent should wait before making a follow-up request.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                },
                "example" : 180
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "TooManyRequestsException",
                    "status" : "429",
                    "title" : "Too Many Requests",
                    "detail" : "The user has sent too many requests in a given amount of time see \"rate limiting\"."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate/logout" : {
      "get" : {
        "summary" : "Log out of PhotoShelter.",
        "description" : "Log our of PhotoShelter",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "X-PS-Api-Key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "X-PS-Auth-Token",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Generic HTTP 200 Ok Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Log out of PhotoShelter.",
        "description" : "Log out of PhotoShelter",
        "operationId" : "logout_post",
        "parameters" : [ {
          "name" : "X-PS-Api-Key",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "X-PS-Auth-Token",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Generic HTTP 200 Ok Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Gallery" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^G0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Gallery ID",
            "example" : "G0000EXAMPLE_GAL",
            "xml" : {
              "attribute" : true
            }
          },
          "type" : {
            "pattern" : "gallery",
            "type" : "string",
            "example" : "gallery"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Gallery_attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Gallery_links"
          }
        }
      },
      "MetaTag" : {
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "string",
            "example" : "PhotoShelter 2019"
          },
          "version" : {
            "type" : "string",
            "example" : "2019-05-01"
          },
          "rate_limit_limit" : {
            "type" : "integer",
            "example" : 10
          },
          "rate_limit_current" : {
            "type" : "integer",
            "example" : 1
          },
          "rate_limit_expires" : {
            "type" : "integer",
            "example" : 60
          }
        }
      },
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "api_token" : {
            "type" : "string"
          }
        }
      },
      "body" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Gallery"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaTag"
          }
        }
      },
      "inline_response_200_2_meta" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "OK"
          }
        }
      },
      "inline_response_200_2" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/inline_response_200_2_meta"
          }
        }
      },
      "Gallery_attributes" : {
        "required" : [ "access_id", "created_at", "description", "display_order", "is_listed", "is_orig_enabled", "is_watermark_disabled", "key_image_id", "modified_at", "name", "name_url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Name of Gallery or Collection object (Whichever it is)",
            "example" : "My trip to DR"
          },
          "name_url" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "URL to the gallery",
            "nullable" : true
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Description of the Gallery",
            "nullable" : true,
            "example" : "Trip to DR with my brothers and sisters"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Custom display order",
            "example" : 1
          },
          "key_image_id" : {
            "pattern" : "^GI000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "ID of the Image that is the key image",
            "nullable" : true,
            "example" : "GI000EXAMPLE_IMG"
          },
          "access_id" : {
            "pattern" : "^A0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Access ID of the Gallery",
            "example" : "A0000EXAMPLE_ACS"
          },
          "is_listed" : {
            "type" : "boolean",
            "description" : "Flag that denotes if it is listed on the public site",
            "example" : false
          },
          "is_orig_enabled" : {
            "type" : "boolean",
            "description" : "Original enabled boolean value",
            "example" : true
          },
          "is_watermark_disabled" : {
            "type" : "boolean",
            "description" : "Watermark disabled boolean value",
            "example" : true
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation date",
            "example" : "2019-04-25T14:54:12.136828"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Last modified date",
            "example" : "2019-04-25T14:54:12.136828"
          }
        }
      },
      "Gallery_links" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "Link to itself",
            "example" : "https://api.photoshelter.com/psapi/v4/galleries/G0000ZJCk9LW4Zfc"
          }
        }
      },
      "Error_links" : {
        "type" : "object",
        "properties" : {
          "about" : {
            "type" : "string",
            "example" : "http://api.developer.com/404.html"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "links" : {
            "$ref" : "#/components/schemas/Error_links"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}