{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Anthony"
  },
  "servers" : [ {
    "url" : "http://anthony.dev.bitshelter.com/psapi/v4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "security" : [ {
    "https://api.swaggerhub.com/domains/PhotoShelter/PhotoShelter-Domain/Final#/components/securitySchemes/PSApiKeyHeader" : [ "read", "write" ]
  }, {
    "https://api.swaggerhub.com/domains/PhotoShelter/PhotoShelter-Domain/Final#/security/PSApiKeyHeader" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "PhotoShelter"
  } ],
  "paths" : {
    "/portal" : {
      "get" : {
        "tags" : [ "Portal" ],
        "summary" : "Gets all the collections and galleries for the accountat the root level.",
        "description" : "Gets all the collections and galleries for the accountat the root level.",
        "operationId" : "portalGet",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "query",
          "description" : "User ID, will attempt to derive from hostname if not provided optional.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^U0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "User ID",
            "example" : "U0000KqsUW0Voex4"
          }
        }, {
          "name" : "org_id",
          "in" : "query",
          "description" : "Organization ID, will attempt to derive from hostname if not provided optional",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^O0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Organization ID",
            "example" : "O00001In9lBxVjBA"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 3,
            "default" : 1
          },
          "example" : 9
        }, {
          "name" : "per_page",
          "in" : "query",
          "description" : "Number of rows returned per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 40,
            "default" : 20
          }
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Sort by gallery property.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "creation_time",
            "enum" : [ "creation_time", "modification_time", "name", "display_order" ]
          }
        }, {
          "name" : "sort_dir",
          "in" : "query",
          "description" : "Sorting result set direction (ascending or descending)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc", "todel" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Public Collections and Galleries at the root level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ThisShouldBeARealId",
                    "status" : "400",
                    "title" : "Bad Request / Syntax",
                    "detail" : "Bad Request"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                },
                "example" : "WWW-Authenticate: Bearer"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "AcsPermissionException",
                    "status" : "401",
                    "title" : "Invalid access to resource: Gallery",
                    "detail" : "You are not authorized to view this resource."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "415 Unsupported Media Type Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ResourceNotFoundException",
                    "status" : "415",
                    "title" : "Resource not found",
                    "detail" : "The requested resource was not found."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "429" : {
            "description" : "429 Too Many Requests Error",
            "headers" : {
              "Retry-After" : {
                "description" : "The Retry-After response HTTP header, expressed in seconds, indicates how long the user agent should wait before making a follow-up request.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                },
                "example" : 180
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "TooManyRequestsException",
                    "status" : "429",
                    "title" : "Too Many Requests",
                    "detail" : "The user has sent too many requests in a given amount of time see \"rate limiting\"."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Collection" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^C0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Collection Id",
            "example" : "C0000EXAMPLECOLL"
          },
          "type" : {
            "type" : "string",
            "description" : "Type"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Collection_attributes"
          }
        }
      },
      "Gallery" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^G0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Gallery ID",
            "example" : "G0000EXAMPLE_GAL",
            "xml" : {
              "attribute" : true
            }
          },
          "type" : {
            "pattern" : "gallery",
            "type" : "string",
            "example" : "gallery"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Gallery_attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Gallery_links"
          }
        }
      },
      "MetaTag" : {
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "string",
            "example" : "PhotoShelter 2019"
          },
          "version" : {
            "type" : "string",
            "example" : "2019-05-01"
          },
          "rate_limit_limit" : {
            "type" : "integer",
            "example" : 10
          },
          "rate_limit_current" : {
            "type" : "integer",
            "example" : 1
          },
          "rate_limit_expires" : {
            "type" : "integer",
            "example" : 60
          }
        }
      },
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "inline_response_200" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/Collection"
              }, {
                "$ref" : "#/components/schemas/Gallery"
              } ]
            }
          },
          "meta" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MetaTag"
            } ]
          }
        }
      },
      "Collection_attributes" : {
        "required" : [ "access_id", "created_at", "description", "display_order", "is_listed", "key_image_id", "modified_at", "name", "name_url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Name of the collection",
            "example" : "My Trip to DR"
          },
          "name_url" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "URL to the gallery",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the colletion",
            "example" : "My Trip to DR Collection"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Display order",
            "example" : 1
          },
          "key_image_id" : {
            "pattern" : "^GI000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Key Image ID",
            "example" : "GI000EXAMPLE_IMG"
          },
          "access_id" : {
            "pattern" : "^A0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Access ID",
            "example" : "A0000EXAMPLE_ACS"
          },
          "is_listed" : {
            "type" : "boolean",
            "description" : "Is listed on public site",
            "example" : false
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation date",
            "example" : "2019-04-25T14:54:12.136828"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Modified Date",
            "example" : "2019-04-25T14:54:12.136828"
          }
        }
      },
      "Gallery_attributes" : {
        "required" : [ "access_id", "created_at", "description", "display_order", "is_listed", "is_orig_enabled", "is_watermark_disabled", "key_image_id", "modified_at", "name", "name_url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Name of Gallery or Collection object (Whichever it is)",
            "example" : "My trip to DR"
          },
          "name_url" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "URL to the gallery",
            "nullable" : true
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Description of the Gallery",
            "nullable" : true,
            "example" : "Trip to DR with my brothers and sisters"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Custom display order",
            "example" : 1
          },
          "key_image_id" : {
            "pattern" : "^GI000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "ID of the Image that is the key image",
            "nullable" : true,
            "example" : "GI000EXAMPLE_IMG"
          },
          "access_id" : {
            "pattern" : "^A0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Access ID of the Gallery",
            "example" : "A0000EXAMPLE_ACS"
          },
          "is_listed" : {
            "type" : "boolean",
            "description" : "Flag that denotes if it is listed on the public site",
            "example" : false
          },
          "is_orig_enabled" : {
            "type" : "boolean",
            "description" : "Original enabled boolean value",
            "example" : true
          },
          "is_watermark_disabled" : {
            "type" : "boolean",
            "description" : "Watermark disabled boolean value",
            "example" : true
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation date",
            "example" : "2019-04-25T14:54:12.136828"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Last modified date",
            "example" : "2019-04-25T14:54:12.136828"
          }
        }
      },
      "Gallery_links" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "Link to itself",
            "example" : "https://api.photoshelter.com/psapi/v4/galleries/G0000ZJCk9LW4Zfc"
          }
        }
      },
      "Error_links" : {
        "type" : "object",
        "properties" : {
          "about" : {
            "type" : "string",
            "example" : "http://api.developer.com/404.html"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "links" : {
            "$ref" : "#/components/schemas/Error_links"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}