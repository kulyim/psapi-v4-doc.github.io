{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Anthony"
  },
  "servers" : [ {
    "url" : "http://anthony.dev.bitshelter.com/psapi/v4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "security" : [ {
    "https://api.swaggerhub.com/domains/PhotoShelter/PhotoShelter-Domain/Final#/components/securitySchemes/PSApiKeyHeader" : [ "read", "write" ]
  }, {
    "https://api.swaggerhub.com/domains/PhotoShelter/PhotoShelter-Domain/Final#/security/PSApiKeyHeader" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "PhotoShelter"
  } ],
  "paths" : {
    "/portal" : {
      "get" : {
        "tags" : [ "Portal" ],
        "summary" : "Gets all the collections and galleries for the accountat the root level.",
        "description" : "Gets all the collections and galleries for the accountat the root level.",
        "operationId" : "portalGet",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "query",
          "description" : "User ID, will attempt to derive from hostname if not provided optional.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^U0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "User ID",
            "example" : "U0000KqsUW0Voex4"
          }
        }, {
          "name" : "org_id",
          "in" : "query",
          "description" : "Organization ID, will attempt to derive from hostname if not provided optional",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^O0000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "description" : "Organization ID",
            "example" : "O00001In9lBxVjBA"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 3,
            "default" : 1
          },
          "example" : 9
        }, {
          "name" : "per_page",
          "in" : "query",
          "description" : "Number of rows returned per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 40,
            "default" : 20
          }
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Sort by gallery property.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "creation_time",
            "enum" : [ "creation_time", "modification_time", "name", "display_order" ]
          }
        }, {
          "name" : "sort_dir",
          "in" : "query",
          "description" : "Sorting result set direction (ascending or descending)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                },
                "example" : "WWW-Authenticate: Bearer"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "415" : {
            "description" : "415 Unsupported Media Type Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "429" : {
            "description" : "429 Too Many Requests Error",
            "headers" : {
              "Retry-After" : {
                "description" : "The Retry-After response HTTP header, expressed in seconds, indicates how long the user agent should wait before making a follow-up request.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                },
                "example" : 180
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "Error_links" : {
        "type" : "object",
        "properties" : {
          "about" : {
            "type" : "string",
            "example" : "http://api.developer.com/404.html"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "links" : {
            "$ref" : "#/components/schemas/Error_links"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}