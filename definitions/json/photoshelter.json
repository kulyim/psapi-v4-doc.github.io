{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Allan"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "tags" : [ {
    "name" : "PhotoShelter API"
  } ],
  "paths" : {
    "/media/{media_id}" : {
      "get" : {
        "tags" : [ "Media" ],
        "summary" : "GET /media/{media_id}.",
        "description" : "Get media by ID. This endpoint works for both public and authenticated users. Certain fields are non-null only if users have the permission to view them. Users must provide a valid media ID which can be a video, document, audio, or image id. This endpoint will return data corresponding with the type of media that was retrieved.",
        "operationId" : "mediaGetId",
        "parameters" : [ {
          "name" : "media_id",
          "in" : "path",
          "description" : "A media ID. Either a video, doc, audio, or image",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/schema"
          },
          "example" : "I0000EXAMPLEIMAG"
        } ],
        "responses" : {
          "200" : {
            "description" : "/media/{media_id} - HTTP 200 OK Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ThisShouldBeARealId",
                    "status" : "400",
                    "title" : "Bad Request / Syntax",
                    "detail" : "Bad Request"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                },
                "example" : "WWW-Authenticate: Bearer"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "AcsPermissionException",
                    "status" : "401",
                    "title" : "Invalid access to resource: Gallery",
                    "detail" : "You are not authorized to view this resource."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "error" : {
                    "id" : "ApiKeyInvalidException",
                    "status" : "403",
                    "title" : "Missing or invalid API key",
                    "detail" : "Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or\nis invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.\nIf you do not have an API key, you can request one on our website."
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404 Not Found Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "ResourceNotFoundException",
                    "status" : "404",
                    "title" : "Resource not found",
                    "detail" : "The requested resource was not found."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "429" : {
            "description" : "429 Too Many Requests Error",
            "headers" : {
              "Retry-After" : {
                "description" : "The Retry-After response HTTP header, expressed in seconds, indicates how long the user agent should wait before making a follow-up request.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                },
                "example" : 180
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "errors" : {
                    "id" : "TooManyRequestsException",
                    "status" : "429",
                    "title" : "Too Many Requests",
                    "detail" : "The user has sent too many requests in a given amount of time see \"rate limiting\"."
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "schema" : {
        "title" : "Media ID",
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^(AD|VD|DO|I0)000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "Media ID",
        "example" : "I0000zCtew4UPbBw"
      },
      "MediaGetObject" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 16,
            "minLength" : 16,
            "pattern" : "^(AD|VD|DO|I0)000[a-zA-Z0-9._]{11}$",
            "type" : "string",
            "example" : "I0000zCtew4UPbBw"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "image", "doc", "audio", "video" ]
          },
          "attributes" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MediaImage"
            }, {
              "$ref" : "#/components/schemas/MediaAudio"
            }, {
              "$ref" : "#/components/schemas/MediaDocument"
            }, {
              "$ref" : "#/components/schemas/MediaVideo"
            } ]
          }
        }
      },
      "MediaImage" : {
        "required" : [ "created_at", "creator_id", "file_name", "file_size", "flagged", "focal_point_x", "focal_point_y", "height", "model_released", "modified_at", "organization_id", "owner_id", "photographer_id", "property_released", "rating", "screen_height", "screen_height_max", "screen_width", "screen_width_max", "searchable", "thumbnail_height", "thumbnail_width", "views", "width" ],
        "type" : "object",
        "properties" : {
          "owner_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "organization_id" : {
            "$ref" : "#/components/schemas/OrganizationId"
          },
          "creator_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "photographer_id" : {
            "$ref" : "#/components/schemas/PhotographerId"
          },
          "file_name" : {
            "type" : "string",
            "description" : "The name of the file",
            "example" : "File Name"
          },
          "file_size" : {
            "type" : "integer",
            "description" : "The size of the file in bytes",
            "example" : 10000
          },
          "height" : {
            "type" : "integer",
            "description" : "Native image height in pixels",
            "example" : 1000
          },
          "width" : {
            "type" : "integer",
            "description" : "Native image width in pixels",
            "example" : 600
          },
          "rating" : {
            "type" : "number",
            "description" : "The image rating from -1 to 5",
            "nullable" : true,
            "example" : 3
          },
          "screen_height" : {
            "type" : "integer",
            "description" : "Screen image height in pixels",
            "nullable" : true,
            "example" : 1000
          },
          "screen_width" : {
            "type" : "integer",
            "description" : "Screen image width in pixels",
            "nullable" : true,
            "example" : 600
          },
          "screen_height_max" : {
            "type" : "integer",
            "description" : "Max screen image height in pixels",
            "nullable" : true,
            "example" : 10000
          },
          "screen_width_max" : {
            "type" : "integer",
            "description" : "Max screen image width in pixels",
            "nullable" : true,
            "example" : 6000
          },
          "thumbnail_height" : {
            "type" : "integer",
            "description" : "Thumbnail height in pixels",
            "nullable" : true,
            "example" : 200
          },
          "thumbnail_width" : {
            "type" : "integer",
            "description" : "Thumbnail width in pixels",
            "nullable" : true,
            "example" : 180
          },
          "views" : {
            "type" : "integer",
            "description" : "View counter for the image",
            "nullable" : true,
            "example" : 0
          },
          "searchable" : {
            "type" : "boolean",
            "description" : "Boolean flag that denotes if the image is publicly searchable",
            "nullable" : true,
            "example" : true
          },
          "model_released" : {
            "type" : "boolean",
            "description" : "Boolean flag that denotes if the image model is released",
            "nullable" : true,
            "example" : true
          },
          "property_released" : {
            "type" : "boolean",
            "description" : "Boolean flag that denotes if the image property is released",
            "nullable" : true,
            "example" : true
          },
          "flagged" : {
            "type" : "boolean",
            "description" : "Boolean flag that denotes if the image has been flagged by the photographer",
            "nullable" : true,
            "example" : true
          },
          "focal_point_x" : {
            "type" : "integer",
            "description" : "Core product specific variable. Denotes the focal point of the image on the x-coordinate plane",
            "nullable" : true,
            "example" : 100
          },
          "focal_point_y" : {
            "type" : "integer",
            "description" : "Core product specific variabnle. Denotes the focal point of the image on the y-coordinate plane",
            "nullable" : true,
            "example" : 100
          },
          "created_at" : {
            "type" : "string",
            "description" : "Date and time the image was last updated",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Date and time the image was originally uploaded",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          }
        }
      },
      "UserIdNullable" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^U0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "User Id",
        "nullable" : true,
        "example" : "U0000EXAMPLEUSER"
      },
      "OrganizationId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^O0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "Organization Id",
        "nullable" : true,
        "example" : "O0000EXAMPLE_OWN"
      },
      "UserId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^U0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "User Id",
        "example" : "U0000EXAMPLEUSER"
      },
      "PhotographerId" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^U0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "Photographer Id",
        "nullable" : true,
        "example" : "U0000EXAMPLEUSER"
      },
      "MediaAudio" : {
        "required" : [ "created_at", "creator_id", "duration", "file_name", "file_size", "format", "hash", "model_released", "modified_at", "owner_id", "property_released", "rating", "start_time" ],
        "type" : "object",
        "properties" : {
          "owner_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "file_name" : {
            "type" : "string",
            "description" : "The name of the file",
            "example" : "File Name"
          },
          "file_size" : {
            "type" : "integer",
            "description" : "The size of the file in bytes",
            "example" : 10000
          },
          "start_time" : {
            "type" : "number",
            "description" : "Start time of the audio",
            "example" : 0.05
          },
          "duration" : {
            "type" : "number",
            "description" : "Duration of the audio file",
            "example" : 25
          },
          "format" : {
            "type" : "string",
            "description" : "Format of the audio file",
            "example" : "mp3"
          },
          "hash" : {
            "type" : "string",
            "description" : "Audio file SHA-1 hash",
            "nullable" : true,
            "example" : "051a007701ae51921e2e5eec19dfeexamplehash"
          },
          "creator_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "model_released" : {
            "type" : "boolean",
            "description" : "Boolean denoting if the model is released",
            "nullable" : true,
            "example" : true
          },
          "property_released" : {
            "type" : "boolean",
            "description" : "Boolean denoting if the property is released",
            "nullable" : true,
            "example" : true
          },
          "rating" : {
            "type" : "number",
            "description" : "Rating",
            "nullable" : true,
            "example" : 3
          },
          "created_at" : {
            "type" : "string",
            "description" : "Date and time the audio was last updated",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Date and time the audio was originally uploaded",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          }
        }
      },
      "MediaDocument" : {
        "required" : [ "created_at", "creator_id", "file_name", "file_size", "format", "format_readable", "hash", "modified_at", "org_id", "owner_id", "rating" ],
        "type" : "object",
        "properties" : {
          "owner_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "creator_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "org_id" : {
            "$ref" : "#/components/schemas/OrganizationId"
          },
          "file_name" : {
            "type" : "string",
            "description" : "File Name",
            "example" : "Example File Name"
          },
          "file_size" : {
            "type" : "integer",
            "description" : "File size in bytes",
            "example" : 100000
          },
          "format" : {
            "type" : "string",
            "description" : "Describes the format of the file",
            "example" : "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
          },
          "format_readable" : {
            "type" : "string",
            "description" : "Format Readable",
            "example" : "Microsoft Word"
          },
          "hash" : {
            "type" : "string",
            "description" : "Hash encryption of the file",
            "nullable" : true,
            "example" : "051a007701ae51921e2e5eec19dfeexamplehash"
          },
          "rating" : {
            "type" : "number",
            "description" : "Document rating",
            "nullable" : true,
            "example" : 1
          },
          "created_at" : {
            "type" : "string",
            "description" : "Date and time the document was last updated",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Date and time the document was originally uploaded",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          }
        }
      },
      "MediaVideo" : {
        "required" : [ "created_at", "creator_id", "duration", "file_name", "file_size", "format", "hash", "height", "model_released", "modified_at", "owner_id", "photographer_id", "property_released", "rating", "rotate", "start_time", "width" ],
        "type" : "object",
        "properties" : {
          "owner_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "file_name" : {
            "type" : "string",
            "description" : "File name",
            "example" : "Sample file name"
          },
          "file_size" : {
            "type" : "integer",
            "description" : "File size in bytes",
            "example" : 100000
          },
          "rotate" : {
            "type" : "number",
            "description" : "Video rotation in degrees",
            "example" : 30.0
          },
          "height" : {
            "type" : "integer",
            "description" : "Video height in pixels",
            "example" : 360
          },
          "width" : {
            "type" : "integer",
            "description" : "Video width in pixels",
            "example" : 640
          },
          "start_time" : {
            "type" : "number",
            "description" : "Video start time",
            "example" : 0
          },
          "duration" : {
            "type" : "number",
            "description" : "Duration of the video",
            "example" : 30.0
          },
          "format" : {
            "type" : "string",
            "description" : "Video format",
            "example" : "x-ms-asf"
          },
          "photographer_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "creator_id" : {
            "$ref" : "#/components/schemas/UserIdNullable"
          },
          "hash" : {
            "type" : "string",
            "description" : "Hash Encryption of the file",
            "nullable" : true,
            "example" : "051a007701ae51921e2e5eec19dfeexamplehash"
          },
          "model_released" : {
            "type" : "boolean",
            "description" : "Boolean flag denoting if the model is released",
            "nullable" : true,
            "example" : true
          },
          "property_released" : {
            "type" : "boolean",
            "description" : "Boolean flag denoting if the property is released",
            "nullable" : true,
            "example" : true
          },
          "rating" : {
            "type" : "number",
            "description" : "Rating",
            "nullable" : true,
            "example" : 1
          },
          "created_at" : {
            "type" : "string",
            "description" : "Date and time the document was last updated",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          },
          "modified_at" : {
            "type" : "string",
            "description" : "Date and time the document was originally uploaded",
            "nullable" : true,
            "example" : "2019-10-02 14:39:23 GMT"
          }
        }
      },
      "MetaTag" : {
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "string",
            "example" : "PhotoShelter 2019"
          },
          "version" : {
            "type" : "string",
            "example" : "2019-05-01"
          },
          "rate_limit" : {
            "$ref" : "#/components/schemas/MetaTag_rate_limit"
          }
        }
      },
      "Error" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error_errors"
            }
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "inline_response_200" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaGetObject"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaTag"
          }
        },
        "example" : "{\"data\":{\"id\":\"VD000EXAMPLE_VID\",\"type\":\"video\",\"attributes\":{\"file_name\":\"Sample Video\",\"file_size\":10000,\"rotate\":0,\"height\":640,\"width\":360,\"start_time\":0,\"duration\":60,\"creator_id\":\"U0000EXAMPLEUSER\",\"hash\":\"051a007701ae51921e2e5eec19dfeexamplehash\",\"model_released\":true,\"property_released\":true,\"rating\":1,\"updated_at\":\"2019-10-02 14:39:23 GMT\",\"uploaded_at\":\"2019-10-02 14:39:23 GMT\"}},\"meta\":{\"copyright\":\"PhotoShelter 2019\",\"version\":\"2019-05-01\",\"rate_limit\":{\"limit\":10,\"current\":1,\"expires\":40}}}"
      },
      "inline_response_200_1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaGetObject"
          },
          "meta" : {
            "$ref" : "#/components/schemas/MetaTag"
          }
        }
      },
      "MetaTag_rate_limit" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "example" : 10
          },
          "current" : {
            "type" : "integer",
            "example" : 1
          },
          "expires" : {
            "type" : "integer",
            "example" : 40
          }
        }
      },
      "Error_links" : {
        "type" : "object",
        "properties" : {
          "about" : {
            "type" : "string",
            "example" : "http://api.developer.com/404.html"
          }
        }
      },
      "Error_errors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "links" : {
            "$ref" : "#/components/schemas/Error_links"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          }
        }
      }
    }
  }
}