openapi: 3.0.0
info:
  title: PhotoShelter API v4
  description: '# PhotoShelter API v4 definition'
  termsOfService: https://www.photoshelter.com/support/terms/
  contact:
    name: PhotoShelter API Support Team
    url: https://support.photoshelter.com
    email: api-support@photoshelter.com
  license:
    name: PhotoShelter License
    url: https://www.photoshelter.com/support/license
  version: Allan
servers:
- url: https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4
  description: PhotoShelter Auto Mocking API
tags:
- name: PhotoShelter API
paths:
  /galleries/{gallery_id}/children:
    get:
      tags:
      - Gallery
      summary: GET /galleries/{gallery_id}/children.
      description: This endpoint does not require authentication. It will retrieve
        all of the media contained in the gallery. Standard visibility and access
        permissions apply. If a user does not have access to the contents of the gallery
        then they will be thrown an error. If a gallery is contained in multiple collections
        then an optional collection_id query parameter can be used to specify the
        collection that the gallery is a child of. This way, you can still access
        the media of a gallery should you lack permissions due to the parent to child
        relationship in one collection versus another collection. (Ex. Collection
        A is completely private and Collection B is public. Gallery C exists in both
        collections. If you do not specify the collection_id then you will always
        be denied access. Passing in the collection_id of Collection B to this endpoint
        will now give you ability to access media in Gallery C because the context
        of Collection B is public.)
      operationId: galleriesGetIdChildren
      parameters:
      - name: gallery_id
        in: path
        description: The ID of the gallery you are selecting children from
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GalleryId'
        example: G0000EXAMPLEGALL
      - name: collection_id
        in: query
        description: The ID the collection the gallery is a child of. This parameter
          is used when a gallery exists in multiple collections and you need to specify
          the collection it exists under.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CollectionId'
        example: C0000EXAMPLECOLL
      - name: password
        in: query
        description: Optional password parameter used to access the contents of a
          gallery with permissions set.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 20
          type: string
        example: PASSWORD
      - name: per_page
        in: query
        description: Denotes the amount of results per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 10
      - name: page
        in: query
        description: Denotes the page to get
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1
      - name: sort_by
        in: query
        description: The field to sort by
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - creation_time
          - modification_time
          - added_at
          - file_name
          - date_taken
          - display_order
        example: file_name
      - name: sort_direction
        in: query
        description: Sort direction
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ascending
          - descending
        example: ascending
      responses:
        200:
          description: Returns a gallery's media. Only returns the ID, type, display
            order, creation time, and modification time of each media.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        400:
          description: 400 Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ThisShouldBeARealId
                  status: "400"
                  title: Bad Request / Syntax
                  detail: Bad Request
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 401 Unauthorized Client Error
          headers:
            WWW-Authenticate:
              description: The HTTP WWW-Authenticate response header defines the authentication
                method that should be used to gain access to a resource.
              style: simple
              explode: false
              schema:
                type: string
              example: 'WWW-Authenticate: Bearer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: AcsPermissionException
                  status: "401"
                  title: 'Invalid access to resource: Gallery'
                  detail: You are not authorized to view this resource.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: 403 Forbidden Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  id: ApiKeyInvalidException
                  status: "403"
                  title: Missing or invalid API key
                  detail: |-
                    Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or
                    is invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.
                    If you do not have an API key, you can request one on our website.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  id: ApiKeyInvalidException
                  status: "403"
                  title: Missing or invalid API key
                  detail: |-
                    Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or
                    is invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.
                    If you do not have an API key, you can request one on our website.
        404:
          description: 404 Not Found Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ResourceNotFoundException
                  status: "404"
                  title: Resource not found
                  detail: The requested resource was not found.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        415:
          description: 415 Unsupported Media Type Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ResourceNotFoundException
                  status: "415"
                  title: Unsupported media type
                  detail: The origin server is refusing to service the request because
                    the payload is in a format not supported by this method on the
                    target resource.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: 429 Too Many Requests Error
          headers:
            Retry-After:
              description: The Retry-After response HTTP header, expressed in seconds,
                indicates how long the user agent should wait before making a follow-up
                request.
              style: simple
              explode: false
              schema:
                type: integer
              example: 180
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: TooManyRequestsException
                  status: "429"
                  title: Too Many Requests
                  detail: The user has sent too many requests in a given amount of
                    time see "rate limiting".
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    GalleryId:
      maxLength: 16
      minLength: 16
      pattern: ^G0000[a-zA-Z0-9._]{11}$
      type: string
      description: The Gallery ID
      example: G0000EXAMPLEGALL
    CollectionId:
      maxLength: 16
      minLength: 16
      pattern: ^C0000[a-zA-Z0-9._]{11}$
      type: string
      description: The Collection ID
      example: C0000EXAMPLECOLL
    GalleryChildren:
      type: array
      items:
        $ref: '#/components/schemas/GalleryChildren_inner'
    PaginationMetaTag:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PaginationMetaTag_paging'
    Error:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error_errors'
      description: This object generates errors in compliance with RFC 7807 API Problem
    inline_response_200:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GalleryChildren'
        meta:
          $ref: '#/components/schemas/PaginationMetaTag'
    GalleryChildren_inner_attributes:
      required:
      - creation_time
      - display_order
      - modification_time
      type: object
      properties:
        display_order:
          type: integer
          nullable: true
          example: 1
    GalleryChildren_inner:
      required:
      - attributes
      - id
      - type
      type: object
      properties:
        id:
          pattern: ^(AD|VD|DO|I0)000[a-zA-Z0-9._]{11}$
          type: string
          description: Media ID. Can be an audio, video, image, or document ID.
          example: I0000EXAMPLEIMAG
        type:
          type: string
          description: The type of media
          example: image
          enum:
          - video
          - image
          - document
          - audio
        attributes:
          $ref: '#/components/schemas/GalleryChildren_inner_attributes'
    PaginationMetaTag_paging:
      type: object
      properties:
        total:
          type: integer
          example: 100
        page:
          type: integer
          example: 1
        first:
          type: string
          example: example.photoshelter.com/psapi/v4.0/endpoint?api_key=EXAMPLE_KEY&page=1
        last:
          type: string
          example: example.photoshelter.com/psapi/v4.0/endpoint?api_key=EXAMPLE_KEY&page=5
        next:
          type: string
          example: example.photoshelter.com/psapi/v4.0/endpoint?api_key=EXAMPLE_KEY&page=2
        prev:
          type: string
          example: example.photoshelter.com/psapi/v4.0/endpoint?api_key=EXAMPLE_KEY&page=1
    Error_links:
      type: object
      properties:
        about:
          type: string
          example: http://api.developer.com/404.html
    Error_errors:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this occurrence of the problem
        links:
          $ref: '#/components/schemas/Error_links'
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: string
          description: The HTTP status code set by the origin server for this occurrence
            of the problem.
        detail:
          type: string
          description: An human readable explanation specific to this occurrence of
            the problem.
