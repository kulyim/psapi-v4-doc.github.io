openapi: 3.0.0
info:
  title: PhotoShelter API v4
  description: '# PhotoShelter API v4 definition'
  termsOfService: https://www.photoshelter.com/support/terms/
  contact:
    name: PhotoShelter API Support Team
    url: https://support.photoshelter.com
    email: api-support@photoshelter.com
  license:
    name: PhotoShelter License
    url: https://www.photoshelter.com/support/license
  version: Yemi
servers:
- url: https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4
  description: PhotoShelter Auto Mocking API
tags:
- name: Authenticate
- name: OAuthClientRegister
paths:
  /register:
    post:
      summary: Collect OAuth Client's Metadata.
      description: collect metadata
      operationId: clientRegister
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        200:
          description: /authenticate - HTTP OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        400:
          description: 400 Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 401 Unauthorized Client Error
          headers:
            WWW-Authenticate:
              description: The HTTP WWW-Authenticate response header defines the authentication
                method that should be used to gain access to a resource.
              style: simple
              explode: false
              schema:
                type: string
              example: 'WWW-Authenticate: Bearer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: 403 Forbidden Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: 404 Not Found Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: 429 Too Many Requests Error
          headers:
            Retry-After:
              description: The Retry-After response HTTP header, expressed in seconds,
                indicates how long the user agent should wait before making a follow-up
                request.
              style: simple
              explode: false
              schema:
                type: integer
              example: 180
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /authenticate:
    get:
      summary: Use your PhotoShelter credentials to log in to your account.
      description: Verify user is a member.
      operationId: authenticate-get
      parameters:
      - name: api_key
        in: query
        description: The API Key. Can be requested if you do not have one.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: Email Address
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
      - name: mode
        in: query
        description: token or cookie
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
    post:
      summary: Use your PhotoShelter credentials to log in to your account.
      description: Verify user is a member.
      operationId: authenticate
      parameters:
      - name: X-PS-Api-Key
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        200:
          description: /authenticate - HTTP OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        400:
          description: 400 Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 401 Unauthorized Client Error
          headers:
            WWW-Authenticate:
              description: The HTTP WWW-Authenticate response header defines the authentication
                method that should be used to gain access to a resource.
              style: simple
              explode: false
              schema:
                type: string
              example: 'WWW-Authenticate: Bearer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: 403 Forbidden Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: 404 Not Found Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: 429 Too Many Requests Error
          headers:
            Retry-After:
              description: The Retry-After response HTTP header, expressed in seconds,
                indicates how long the user agent should wait before making a follow-up
                request.
              style: simple
              explode: false
              schema:
                type: integer
              example: 180
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errors: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /authenticate/logout:
    get:
      summary: Log out of PhotoShelter.
      description: Log our of PhotoShelter
      operationId: logout
      parameters:
      - name: X-PS-Api-Key
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: object
      - name: X-PS-Auth-Token
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: object
      responses:
        200:
          description: OK
    post:
      summary: Log out of PhotoShelter.
      description: Log out of PhotoShelter
      operationId: logout_post
      parameters:
      - name: X-PS-Api-Key
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: object
      - name: X-PS-Auth-Token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: object
      responses:
        200:
          description: OK
components:
  schemas:
    Error:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error_errors'
      description: This object generates errors in compliance with RFC 7807 API Problem
    body:
      required:
      - CLIENT_NAME
      - HOMEPAGE_URI
      - PRIVACY_POLICY_URL
      - REDIRECT_URI
      - SOFTWARE_DESC
      - SOFTWARE_NAME
      type: object
      properties:
        CLIENT_NAME:
          type: string
        CLIENT_CONTACT:
          type: string
        SOFTWARE_NAME:
          type: string
        SOFTWARE_DESC:
          type: string
        REDIRECT_URI:
          type: string
        HOMEPAGE_URI:
          type: string
        PRIVACY_POLICY_URL:
          type: string
        LOGO_URI:
          type: string
        SCOPES:
          type: string
    inline_response_200:
      type: object
      properties:
        CLIENT_ID:
          type: string
        CLIENT_SECRET:
          type: string
        CLIENT_NAME:
          type: string
        CLIENT_CONTACT:
          type: string
        SOFTWARE_NAME:
          type: string
        SOFTWARE_DESC:
          type: string
        REDIRECT_URI:
          type: string
        HOMEPAGE_URI:
          type: string
        PRIVACY_POLICY_URL:
          type: string
        LOGO_URI:
          type: string
        SCOPES:
          type: string
    inline_response_200_1:
      type: object
      properties:
        api_token:
          type: string
    body_1:
      required:
      - email
      - mode
      - password
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        mode:
          type: string
        org_id:
          type: string
    inline_response_200_2:
      type: object
      properties:
        token:
          type: string
          description: auth token
    Error_links:
      type: object
      properties:
        about:
          type: string
          example: http://api.developer.com/404.html
    Error_errors:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this occurrence of the problem
        links:
          $ref: '#/components/schemas/Error_links'
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: string
          description: The HTTP status code set by the origin server for this occurrence
            of the problem.
        detail:
          type: string
          description: An human readable explanation specific to this occurrence of
            the problem.
