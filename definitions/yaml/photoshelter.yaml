openapi: 3.0.0
info:
  title: PhotoShelter API v4
  description: '# PhotoShelter API v4 definition'
  termsOfService: https://www.photoshelter.com/support/terms/
  contact:
    name: PhotoShelter API Support Team
    url: https://support.photoshelter.com
    email: api-support@photoshelter.com
  license:
    name: PhotoShelter License
    url: https://www.photoshelter.com/support/license
  version: Anthony
servers:
- url: https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4
  description: PhotoShelter Auto Mocking API
tags:
- name: PhotoShelter
paths:
  /galleries:
    get:
      tags:
      - Gallery
      summary: Gets all the galleries for the account.
      description: Gets all the galleries for the account!
      operationId: GalleriesGet
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: per_page
        in: query
        description: Number of rows returned per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      - name: sort_by
        in: query
        description: Sort by gallery property
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: creation_time
          enum:
          - creation_time
          - modification_time
          - name
          - display_order
      - name: sort_dir
        in: query
        description: Sorting result set direction (ascending or descending)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: asc
          enum:
          - asc
          - desc
      - name: name
        in: query
        description: Full or partial gallery name
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: Search galleries by partial name
      - name: parent
        in: query
        description: Limit galleries to children of the provided collection ID. Pass
          blank to find galleries with no parent.
        required: false
        style: form
        explode: true
        schema:
          pattern: ^C0000[a-zA-Z0-9._]{11}$
          type: string
          description: Collection ID
          example: C0000LYrqIr59eJI
      - name: portfolio
        in: query
        description: |
          Filter the result set to return galleries listed on public site
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: recently_updated
        in: query
        description: |
          Filter the result set to return galleries recently updated
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: |
            /galleries - HTTP 200 OK Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        400:
          description: 400 Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ThisShouldBeARealId
                  status: "400"
                  title: Bad Request / Syntax
                  detail: You are not authorized to access this resource.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 401 Unauthorized Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: AcsPermissionException
                  status: "401"
                  title: 'Invalid access to resource: Gallery'
                  detail: You are not authorized to view this resource.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: 403 Forbidden Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ApiKeyInvalidException
                  status: "403"
                  title: Missing or invalid API key
                  detail: |-
                    Missing or invalid API Key error. This occurs when an API key is either missing from the request to the server or
                    is invalid. This error can be resolved by including the API key in the request URL with the api_key parameter or in the HTTP request headers.
                    If you do not have an API key, you can request one on our website.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        415:
          description: 404 Not Found Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: ResourceNotFoundException
                  status: "404"
                  title: Resource not found
                  detail: The requested resource was not found.
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: 429 Too Many Requests Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  id: TooManyRequestsException
                  status: "429"
                  title: Too Many Requests
                  detail: The user has sent too many requests in a given amount of
                    time see "rate limiting".
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ArrayOfGalleries:
      type: array
      items:
        allOf:
        - $ref: '#/components/schemas/Gallery'
    MetaTag:
      type: object
      properties:
        copyright:
          type: string
          example: PhotoShelter 2019
        version:
          type: string
          example: 2019-05-01
        rate_limit_limit:
          type: integer
          example: 10
        rate_limit_current:
          type: integer
          example: 1
        rate_limit_expires:
          type: integer
          example: 60
    Error:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error_errors'
      description: This object generates errors in compliance with RFC 7807 API Problem
    inline_response_200:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ArrayOfGalleries'
        meta:
          $ref: '#/components/schemas/MetaTag'
    Error_links:
      type: object
      properties:
        about:
          type: string
          example: http://api.developer.com/404.html
    Error_errors:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this occurrence of the problem
        links:
          $ref: '#/components/schemas/Error_links'
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: string
          description: The HTTP status code set by the origin server for this occurrence
            of the problem.
        detail:
          type: string
          description: An human readable explanation specific to this occurrence of
            the problem.
