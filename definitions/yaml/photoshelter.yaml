openapi: 3.0.0
info:
  title: PhotoShelter API v4
  description: '# PhotoShelter API v4 definition'
  termsOfService: https://www.photoshelter.com/support/terms/
  contact:
    name: PhotoShelter API Support Team
    url: https://support.photoshelter.com
    email: api-support@photoshelter.com
  license:
    name: PhotoShelter License
    url: https://www.photoshelter.com/support/license
  version: Anthony
servers:
- url: https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4
  description: PhotoShelter Auto Mocking API
tags:
- name: PhotoShelter
paths:
  /galleries:
    get:
      tags:
      - Gallery
      summary: Gets all the galleries for the account.
      description: Gets all the galleries for the account!
      operationId: GalleriesGet
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: per_page
        in: query
        description: Number of rows returned per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      - name: sort_by
        in: query
        description: Sort by gallery property
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: creation_time
          enum:
          - creation_time
          - modification_time
          - name
          - display_order
      - name: sort_dir
        in: query
        description: Sorting direction
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: asc
          enum:
          - asc
          - desc
      - name: name
        in: query
        description: |
          Full or partial gallery name  fdsfs fdfsdf ds   fdsfds
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: portfolio
        in: query
        description: "Filter the result set to return galleries listed on public site\
          \ \n"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: recently_updated
        in: query
        description: "Filter the result set to return galleries recently updated \n"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/v1JsonApi'
                - properties:
                    data:
                      oneOf:
                      - $ref: '#/components/schemas/Gallery'
                      - $ref: '#/components/schemas/Image'
                    meta:
                      $ref: '#/components/schemas/MetaTag'
          links:
            GetGalleries:
              operationId: getGalleries
        400:
          description: Error
components:
  schemas:
    ApiProblem:
      type: object
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type
        type:
          type: string
          description: A URI reference (RFC3986) that identifies the problem type
        status:
          type: integer
          description: The HTTP status code set by the origin server for this occurrence
            of the problem.
        detail:
          type: string
          description: An human readable explanation specific to this occurrence of
            the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem.
      description: This object generates errors in compliance with RFC 7807 'API Problem'
    v1JsonApi:
      type: object
      properties:
        data:
          type: object
          example: {}
          oneOf:
          - $ref: '#/components/schemas/Gallery'
          - $ref: '#/components/schemas/Image'
        meta:
          type: object
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiProblem'
      description: A flat schema for the JSONAPI-light
    Gallery:
      required:
      - type
      type: object
      properties:
        id:
          type: string
          description: The gallery ID
          example: G0000b9PbmJDQcko
        type:
          type: string
          description: Entity type
          example: gallery
        description:
          type: string
          description: Gallery description
          example: My trip to DR
        f_list:
          type: boolean
          description: Listed on public site
          example: false
        display_order:
          type: integer
          description: Custom display order
          example: 0
        mode:
          type: string
          description: Native visibility mode
        effective_mode:
          type: string
          description: Effective mode with permission inheritance
        created_at:
          type: string
          description: Creation date
          example: 2019-04-12
        modified_at:
          type: string
          description: Modification date
          example: 2019-04-12
        collection_id:
          type: string
          description: Collection ID
          example: C0000IRVZsqAiXtA
    Image:
      type: object
      properties:
        gallery_id:
          $ref: '#/components/schemas/id'
    id:
      type: string
      description: The gallery ID
      example: G0000b9PbmJDQcko
    MetaTag:
      type: object
      properties:
        copyright:
          type: string
        authors:
          type: array
          items:
            type: string
