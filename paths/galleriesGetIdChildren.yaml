get:
  operationId: galleriesGetIdChildren
  tags:
    - Gallery
  description: 'This endpoint does not require authentication. It will retrieve all of the media contained in the gallery. Standard visibility and access permissions apply. If a user does not have access to the contents of the gallery then they will be thrown an error. If a gallery is contained in multiple collections then an optional collection_id query parameter can be used to specify the collection that the gallery is a child of. This way, you can still access the media of a gallery should you lack permissions due to the parent to child relationship in one collection versus another collection. (Ex. Collection A is completely private and Collection B is public. Gallery C exists in both collections. If you do not specify the collection_id then you will always be denied access. Passing in the collection_id of Collection B to this endpoint will now give you ability to access media in Gallery C because the context of Collection B is public.)'
  summary: 'Get the children of a gallery.'
  parameters:
    - name: gallery_id
      $ref: ../components/parameters.yaml#/gallery_id
    # - name: collection_id
    #   description: "The ID the collection the gallery is a child of. This parameter is used when a gallery exists in multiple collections and you need to specify the collection it exists under."
    #   example: "C0000EXAMPLECOLL"
    #   in: query
    #   required: false
    #   schema:
    #     $ref: 'https://api.swaggerhub.com/domains/PhotoShelter/PhotoShelter-Domain/Final#/components/schemas/CollectionId'
    # - name: password
    #   description: "Optional password parameter used to access the contents of a gallery with permissions set."
    #   example: "PASSWORD"
    #   in: query
    #   required: false
    #   schema:
    #     type: string
    #     maxLength: 20
    # - name: per_page
    #   description: "Denotes the amount of results per page"
    #   example: 10
    #   in: query
    #   required: false
    #   schema:
    #     type: integer
    # - name: page
    #   description: "Denotes the page to get"
    #   example: 1
    #   in: query
    #   required: false
    #   schema:
    #     type: integer
    # - name: sort_by
    #   description: "The field to sort by"
    #   example: file_name
    #   in: query
    #   required: false
    #   schema:
    #     type: string
    #     enum:
    #       - creation_time
    #       - modification_time
    #       - added_at
    #       - file_name
    #       - date_taken
    #       - display_order
    # - name: sort_direction
    #   description: "Sort direction"
    #   example: ascending
    #   in: query
    #   required: false
    #   schema:
    #     type: string
    #     enum:
    #       - ascending
    #       - descending
  responses:
    '200':
      $ref: ../components/responses.yaml#/GalleryChildrenResponse
    '400':
      $ref: ../components/errors.yaml#/BadRequestErrorResponse
    '401':
      $ref: ../components/errors.yaml#/UnauthorizedErrorResponse
    '403':
      $ref: ../components/errors.yaml#/ForbiddenErrorResponse
    '404':
      $ref: ../components/errors.yaml#/NotFoundErrorResponse
    '415':
      $ref: ../components/errors.yaml#/UnsupportedMediaTypeErrorResponse
    '429':
      $ref: ../components/errors.yaml#/TooManyRequestsErrorResponse