{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PhotoShelter API v4",
    "description" : "# PhotoShelter API v4 definition",
    "termsOfService" : "https://www.photoshelter.com/support/terms/",
    "contact" : {
      "name" : "PhotoShelter API Support Team",
      "url" : "https://support.photoshelter.com",
      "email" : "api-support@photoshelter.com"
    },
    "license" : {
      "name" : "PhotoShelter License",
      "url" : "https://www.photoshelter.com/support/license"
    },
    "version" : "Allan"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/PhotoShelter/PhotoShelter/4",
    "description" : "PhotoShelter Auto Mocking API"
  } ],
  "paths" : {
    "/galleries/{gallery_id}" : {
      "get" : {
        "summary" : "Get gallery data based off gallery id.",
        "description" : "Get gallery data based off gallery id",
        "operationId" : "GalleryGetId",
        "parameters" : [ {
          "name" : "gallery_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/gallery_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Access forbidden, invalid API-KEY was used",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "401 Unauthorized Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "403" : {
            "description" : "403 Forbidden Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404" : {
            "description" : "404 Not Found Client Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "gallery_id" : {
        "maxLength" : 16,
        "minLength" : 16,
        "pattern" : "^G0000[a-zA-Z0-9._]{11}$",
        "type" : "string",
        "description" : "The Gallery ID",
        "example" : "G0000ZJCk9LW4Zfc"
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "maximum" : 600.0,
            "minimum" : 100.0,
            "type" : "integer",
            "description" : "The HTTP status code."
          },
          "error" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "description" : "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\"."
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
          }
        }
      },
      "GenericError" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identifier for this occurrence of the problem"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type"
          },
          "type" : {
            "type" : "string",
            "description" : "A URI reference (RFC3986) that identifies the problem type"
          },
          "status" : {
            "type" : "integer",
            "description" : "The HTTP status code set by the origin server for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "An human readable explanation specific to this occurrence of the problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI reference that identifies the specific occurrence of the problem."
          }
        },
        "description" : "This object generates errors in compliance with RFC 7807 API Problem"
      },
      "inline_response_401" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/GenericError"
          }
        }
      }
    }
  }
}